Traceback (most recent call last):
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/envs/mds572/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/client.py", line 541, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
TRAIN_DIR = "../input/african-wildlife"
IMAGE_SIZE = 256
BATCH_SIZE = 32
torch.manual_seed(123)

# Dataset
data_transforms = transforms.Compose([
    transforms.Resize(IMAGE_SIZE),
    transforms.CenterCrop(IMAGE_SIZE),
    transforms.RandomHorizontalFlip(p=0.5),
    transforms.ToTensor()
])
dataset = torchvision.datasets.ImageFolder(root=TRAIN_DIR, transform=data_transforms)
# Stratified Sampling
labels = dataset.targets
train_idx, valid_idx= train_test_split(np.arange(len(labels)),
                                       test_size=0.3,
                                       stratify=labels,
                                       random_state=123)        # this is stratified sampling my dataset
train_sampler = torch.utils.data.SubsetRandomSampler(train_idx) # this will tell my dataloader which images are training
valid_sampler = torch.utils.data.SubsetRandomSampler(valid_idx) # this will tell my dataloader which images are validation
# Loaders
train_loader = torch.utils.data.DataLoader(dataset, batch_size=BATCH_SIZE, shuffle=True)
valid_loader = torch.utils.data.DataLoader(dataset, batch_size=BATCH_SIZE, shuffle=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-2-b59062bfa500>[0m in [0;36m<module>[0;34m[0m
[1;32m     11[0m     [0mtransforms[0m[0;34m.[0m[0mToTensor[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     12[0m ])
[0;32m---> 13[0;31m [0mdataset[0m [0;34m=[0m [0mtorchvision[0m[0;34m.[0m[0mdatasets[0m[0;34m.[0m[0mImageFolder[0m[0;34m([0m[0mroot[0m[0;34m=[0m[0mTRAIN_DIR[0m[0;34m,[0m [0mtransform[0m[0;34m=[0m[0mdata_transforms[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     14[0m [0;31m# Stratified Sampling[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     15[0m [0mlabels[0m [0;34m=[0m [0mdataset[0m[0;34m.[0m[0mtargets[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/torchvision/datasets/folder.py[0m in [0;36m__init__[0;34m(self, root, transform, target_transform, loader, is_valid_file)[0m
[1;32m    227[0m                                           [0mtransform[0m[0;34m=[0m[0mtransform[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    228[0m                                           [0mtarget_transform[0m[0;34m=[0m[0mtarget_transform[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 229[0;31m                                           is_valid_file=is_valid_file)
[0m[1;32m    230[0m         [0mself[0m[0;34m.[0m[0mimgs[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msamples[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/torchvision/datasets/folder.py[0m in [0;36m__init__[0;34m(self, root, loader, extensions, transform, target_transform, is_valid_file)[0m
[1;32m    106[0m         super(DatasetFolder, self).__init__(root, transform=transform,
[1;32m    107[0m                                             target_transform=target_transform)
[0;32m--> 108[0;31m         [0mclasses[0m[0;34m,[0m [0mclass_to_idx[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_find_classes[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mroot[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    109[0m         [0msamples[0m [0;34m=[0m [0mmake_dataset[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mroot[0m[0;34m,[0m [0mclass_to_idx[0m[0;34m,[0m [0mextensions[0m[0;34m,[0m [0mis_valid_file[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    110[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0msamples[0m[0;34m)[0m [0;34m==[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/miniconda3/envs/mds572/lib/python3.7/site-packages/torchvision/datasets/folder.py[0m in [0;36m_find_classes[0;34m(self, dir)[0m
[1;32m    135[0m             [0mNo[0m [0;32mclass[0m [0;32mis[0m [0ma[0m [0msubdirectory[0m [0mof[0m [0manother[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    136[0m         """
[0;32m--> 137[0;31m         [0mclasses[0m [0;34m=[0m [0;34m[[0m[0md[0m[0;34m.[0m[0mname[0m [0;32mfor[0m [0md[0m [0;32min[0m [0mos[0m[0;34m.[0m[0mscandir[0m[0;34m([0m[0mdir[0m[0;34m)[0m [0;32mif[0m [0md[0m[0;34m.[0m[0mis_dir[0m[0;34m([0m[0;34m)[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    138[0m         [0mclasses[0m[0;34m.[0m[0msort[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    139[0m         [0mclass_to_idx[0m [0;34m=[0m [0;34m{[0m[0mcls_name[0m[0;34m:[0m [0mi[0m [0;32mfor[0m [0mi[0m[0;34m,[0m [0mcls_name[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mclasses[0m[0;34m)[0m[0;34m}[0m[0;34m[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '../input/african-wildlife'
FileNotFoundError: [Errno 2] No such file or directory: '../input/african-wildlife'

